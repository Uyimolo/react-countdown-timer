{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\countdown-timer\\\\countdown-timer\\\\src\\\\components\\\\Body.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport CardContainer from \"./CardsContainer\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Body = () => {\n  _s();\n  const [future, setFuture] = useState(0);\n  const [distance, setDistance] = useState(0);\n  const [times, setTimes] = useState({\n    days: 0,\n    hours: 0,\n    minutes\n  });\n  useEffect(() => {\n    if (future) {\n      setInterval(() => {\n        const now = new Date().getTime();\n        setDistance(future - now);\n      }, 1000);\n    }\n  }, [future]);\n  const handleDateInput = e => {\n    e.preventDefault();\n    const hoursInMill = e.target.hours.value * 1000 * 60 * 60;\n    const minutesInMill = e.target.minutes.value * 1000 * 60;\n    const secondsInMill = e.target.seconds.value * 1000;\n    const sumOfTime = hoursInMill + minutesInMill + secondsInMill;\n    const presentTime = new Date().getTime() + sumOfTime;\n    setFuture(presentTime);\n    console.log(future);\n    const countDownTimer = /*#__PURE__*/_jsxDEV(CardContainer, {\n      days: days,\n      hours: hours,\n      minutes: minutes,\n      seconds: seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  };\n  const hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n  const minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n  const seconds = Math.floor(distance % (1000 * 60) / 1000);\n  const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"get-time\",\n      onSubmit: e => handleDateInput(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"hours\",\n        id: \"hours\",\n        placeholder: \"Hours\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"minutes\",\n        id: \"minutes\",\n        placeholder: \"Minutes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"seconds\",\n        id: \"seconds\",\n        placeholder: \"Seconds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), countDownTimer]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Body, \"N+p2Y4LriGf814nWc4VudN40R64=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","CardContainer","useState","useEffect","Body","future","setFuture","distance","setDistance","times","setTimes","days","hours","minutes","setInterval","now","Date","getTime","handleDateInput","e","preventDefault","hoursInMill","target","value","minutesInMill","secondsInMill","seconds","sumOfTime","presentTime","console","log","countDownTimer","Math","floor"],"sources":["C:/Users/user/Desktop/countdown-timer/countdown-timer/src/components/Body.js"],"sourcesContent":["import React from \"react\";\r\nimport CardContainer from \"./CardsContainer\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst Body = () => {\r\n  const [future, setFuture] = useState(0);\r\n  const [distance, setDistance] = useState(0);\r\n  const [times, setTimes] = useState({\r\n    days : 0,\r\n    hours : 0,\r\n    minutes\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (future) {\r\n      setInterval(() => {\r\n        const now = new Date().getTime();\r\n        setDistance(future - now);\r\n      }, 1000);\r\n    }\r\n  }, [future]);\r\n\r\n  const handleDateInput = (e) => {\r\n    e.preventDefault();\r\n    const hoursInMill = e.target.hours.value * 1000 * 60 * 60;\r\n    const minutesInMill = e.target.minutes.value * 1000 * 60;\r\n    const secondsInMill = e.target.seconds.value * 1000;\r\n\r\n    const sumOfTime = hoursInMill + minutesInMill + secondsInMill;\r\n    const presentTime = new Date().getTime() + sumOfTime;\r\n\r\n    setFuture(presentTime);\r\n    console.log(future);\r\n\r\n    const countDownTimer = (\r\n      <CardContainer\r\n        days={days}\r\n        hours={hours}\r\n        minutes={minutes}\r\n        seconds={seconds}\r\n      />\r\n    );\r\n  };\r\n\r\n  const hours = Math.floor(\r\n    (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n  );\r\n  const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n  const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n  const days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form className=\"get-time\" onSubmit={(e) => handleDateInput(e)}>\r\n        <input type=\"number\" name=\"hours\" id=\"hours\" placeholder=\"Hours\" />\r\n        <input\r\n          type=\"number\"\r\n          name=\"minutes\"\r\n          id=\"minutes\"\r\n          placeholder=\"Minutes\"\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          name=\"seconds\"\r\n          id=\"seconds\"\r\n          placeholder=\"Seconds\"\r\n        />\r\n        <input type=\"submit\" value=\"Start\" />\r\n      </form>\r\n\r\n      {/* <CardContainer\r\n        days={days}\r\n        hours={hours}\r\n        minutes={minutes}\r\n        seconds={seconds}\r\n      /> */}\r\n      {countDownTimer}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}