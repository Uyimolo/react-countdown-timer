{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\countdown-timer\\\\countdown-timer\\\\src\\\\components\\\\Body.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport CardContainer from \"./CardsContainer\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Body = () => {\n  _s();\n  const [future, setFuture] = useState(0);\n  const [distance, setDistance] = useState(0);\n  const [days, setDays] = useState(0);\n  const [hours, setHours] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  useEffect(() => {\n    if (future) {\n      setInterval(() => {\n        const now = new Date().getTime();\n        setDistance(future - now);\n        setDays(Math.floor(distance / (1000 * 60 * 60 * 24)));\n        setHours(Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60)));\n        setMinutes(Math.floor(distance % (1000 * 60 * 60) / (1000 * 60)));\n        setSeconds(Math.floor(distance % (1000 * 60) / 1000));\n      }, 1000);\n    }\n  }, [future, distance]);\n  const handleDateInput = e => {\n    setFuture(0);\n    const input = e.target.value;\n    setFuture(new Date(input).getTime());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"getTime\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"date\",\n        id: \"date\",\n        onChange: e => handleDateInput(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContainer, {\n      days: days,\n      hours: hours,\n      minutes: minutes,\n      seconds: seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Body, \"84BtcEdt0JV1M5J6gqxLgsWcthc=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","CardContainer","useState","useEffect","Body","future","setFuture","distance","setDistance","days","setDays","hours","setHours","minutes","setMinutes","seconds","setSeconds","setInterval","now","Date","getTime","Math","floor","handleDateInput","e","input","target","value"],"sources":["C:/Users/user/Desktop/countdown-timer/countdown-timer/src/components/Body.js"],"sourcesContent":["import React from \"react\";\r\nimport CardContainer from \"./CardsContainer\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst Body = () => {\r\n  const [future, setFuture] = useState(0);\r\n  const [distance, setDistance] = useState(0);\r\n  const [days, setDays] = useState(0);\r\n  const [hours, setHours] = useState(0);\r\n  const [minutes, setMinutes] = useState(0);\r\n  const [seconds, setSeconds] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (future) {\r\n      setInterval(() => {\r\n        const now = new Date().getTime();\r\n        setDistance(future - now);\r\n        setDays(Math.floor(distance / (1000 * 60 * 60 * 24)));\r\n        setHours(\r\n          Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\r\n        );\r\n        setMinutes(Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60)));\r\n        setSeconds(Math.floor((distance % (1000 * 60)) / 1000));\r\n      }, 1000);\r\n    }\r\n  }, [future,distance]);\r\n\r\n  const handleDateInput = (e) => {\r\n    setFuture(0);\r\n    const input = e.target.value;\r\n    setFuture(new Date(input).getTime());\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"getTime\">\r\n        <input\r\n          type=\"date\"\r\n          name=\"date\"\r\n          id=\"date\"\r\n          onChange={(e) => handleDateInput(e)}\r\n        />\r\n      </div>\r\n      <CardContainer\r\n        days={days}\r\n        hours={hours}\r\n        minutes={minutes}\r\n        seconds={seconds}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,kBAAkB;AAC5C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAE5C,MAAMC,IAAI,GAAG,MAAM;EAAA;EACjB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAEzCC,SAAS,CAAC,MAAM;IACd,IAAIE,MAAM,EAAE;MACVY,WAAW,CAAC,MAAM;QAChB,MAAMC,GAAG,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE;QAChCZ,WAAW,CAACH,MAAM,GAAGa,GAAG,CAAC;QACzBR,OAAO,CAACW,IAAI,CAACC,KAAK,CAACf,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QACrDK,QAAQ,CACNS,IAAI,CAACC,KAAK,CAAEf,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAClE;QACDO,UAAU,CAACO,IAAI,CAACC,KAAK,CAAEf,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC;QACnES,UAAU,CAACK,IAAI,CAACC,KAAK,CAAEf,QAAQ,IAAI,IAAI,GAAG,EAAE,CAAC,GAAI,IAAI,CAAC,CAAC;MACzD,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC,EAAE,CAACF,MAAM,EAACE,QAAQ,CAAC,CAAC;EAErB,MAAMgB,eAAe,GAAIC,CAAC,IAAK;IAC7BlB,SAAS,CAAC,CAAC,CAAC;IACZ,MAAMmB,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC5BrB,SAAS,CAAC,IAAIa,IAAI,CAACM,KAAK,CAAC,CAACL,OAAO,EAAE,CAAC;EACtC,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,wBACxB;MAAK,SAAS,EAAC,SAAS;MAAA,uBACtB;QACE,IAAI,EAAC,MAAM;QACX,IAAI,EAAC,MAAM;QACX,EAAE,EAAC,MAAM;QACT,QAAQ,EAAGI,CAAC,IAAKD,eAAe,CAACC,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA;IACpC;MAAA;MAAA;MAAA;IAAA,QACE,eACN,QAAC,aAAa;MACZ,IAAI,EAAEf,IAAK;MACX,KAAK,EAAEE,KAAM;MACb,OAAO,EAAEE,OAAQ;MACjB,OAAO,EAAEE;IAAQ;MAAA;MAAA;MAAA;IAAA,QACjB;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,GA/CIX,IAAI;AAAA,KAAJA,IAAI;AAiDV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}